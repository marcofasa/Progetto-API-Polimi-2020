#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#define H 30
#define MAX_STRING_SIZE 1024

typedef struct comando{
    long int p1;
    long int p2;
    char par;
}cmd;

void change(cmd comando, char arr[H][MAX_STRING_SIZE], FILE *fp){
    size_t bufsize = 1024;
    char *buffer;
    buffer = (char *) malloc(bufsize * sizeof(char));
    long int i=comando.p1, k=comando.p2;
    //printf("change da %d a %d\n", comando.p1,comando.p2);
    char eof[2]="q";

    while(i<=k){
        getline(&buffer, &bufsize, fp);
        if (strcmp(buffer,eof)==0) break;
        strcpy(arr[i], buffer);
        i++;
    }

}
void undo(cmd comando){
    //printf("undo da %d\n", comando.p1);
}
void redo(cmd comando){
    //printf("redo da %d\n", comando.p1);
}


void print(cmd comando, const char arr[H][MAX_STRING_SIZE]){
    long int i=comando.p1, k=comando.p2;
    //printf("print da %d a %d\n", comando.p1, comando.p2);
    while(i<=k){
        if (i==0) {
            printf(".\n");
            i++;
            continue;
        }
        printf("%s", arr[i]);
        i++;
    }
}

cmd GetOrder(FILE *fp){
    size_t bufsize = 1024;
    char *buffer=NULL;
    char *string;
    cmd istr;

    getline(&buffer, &bufsize, fp);
    string = malloc(strlen(buffer)*sizeof(char) + 1);
    strcpy(string, buffer);
    free(buffer);
    int i=0,j=0,k=0;
    char value1[5],value2[5];

    while(1) {
        if (string[k] == 'c' || string[k] == 'p' || string[k] == 'r' || string[k] == 'u' || string[k] == 'd' ||
            string[k] == '.' || string[k] == 'q') {
            istr.par = string[k];
            break;
        }
        k++;
    }

    if (istr.par=='.'||istr.par=='q') return istr;


    if (istr.par == 'u'){
        istr.p1=atoi(&string[0]);
        istr.par=string[1];
    }
    else if (istr.par =='r') {
        istr.p1=atoi(&string[0]);
        istr.par=string[1];
    }
    else {
        while(1){
            if (string[i]==',') break;
            value1[i]=string[i];
            i++;
        }
        value1[i]='\0';

        while (string[i]!=istr.par){
            i++;
            if (string[i]==istr.par) break;
            value2[j]=string[i];
            j++;
        }
        value2[j]='\0';

        istr.p1=atoi(value1);
        istr.p2=atoi(value2);
    }
    return istr;
}


void interpreter(cmd comando, char arr[H][MAX_STRING_SIZE], FILE *fp){

    if (comando.par=='c')
        change(comando,arr,fp);
    else if (comando.par=='u')
        undo(comando);
    else if (comando.par=='r')
        redo(comando);
    else if (comando.par=='p')
        print(comando,arr);

}


int main(void) {
    FILE *fp;
    char array[H][MAX_STRING_SIZE];
    cmd istruzione;


    fp=fopen("prova.txt", "rt");


    while(1){
        istruzione=GetOrder(fp);
        interpreter(istruzione,array,fp);
        if (istruzione.par=='q') break;
    }



    return 0;
}
